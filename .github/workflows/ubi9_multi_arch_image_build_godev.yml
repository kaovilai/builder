name: 'UBI 9 multi-arch go.dev image build'
 
on:
  workflow_dispatch:
    inputs:
      go_version:
        description: 'Go version to build'
        required: true
        default: '1.20.3'
  push:
    paths:
      - 'go.dev.Dockerfile.ubi9'
      - '.github/workflows/ubi9_multi_arch_image_build_godev.yml'
  pull_request:
    paths:
      - 'go.dev.Dockerfile.ubi9'
      - '.github/workflows/ubi9_multi_arch_image_build_godev.yml'
jobs:
  multiarch-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: add checkout action...
        uses: actions/checkout@v2
 
      - name: configure QEMU action...
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
 
      - name: configure Docker Buildx...
        id: docker_buildx
        uses: docker/setup-buildx-action@master
 
      - name: login to ghcr.io...
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: defining go version to use based on input
        if: github.event_name == 'workflow_dispatch'
        run: | 
          echo "GO_VERSION=${{ github.event.inputs.go_version }}" >> $GITHUB_ENV
      - name: defining go version to use if no input
        if: github.event_name != 'workflow_dispatch'
        run: | 
          echo "GO_VERSION=1.20.3" >> $GITHUB_ENV
      - name: build Multi-arch images...
        uses: docker/build-push-action@v3.3.0
        with:
          builder: ${{ steps.docker_buildx.outputs.name }}
          context: .
          file: ./go.dev.Dockerfile.ubi9
          platforms: linux/amd64,linux/ppc64le,linux/arm64,linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/builder:ubi9-godev${{ env.GO_VERSION }}-latest
          cache-to: type=local,dest=/tmp/.buildx-cache
          provenance: false
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
      - name: get go version
        if: github.event_name != 'pull_request'
        id: go_version_patch
        run: | 
          echo "patch_version=$(docker run --rm ghcr.io/${{ github.repository_owner }}/builder:ubi9-godev${{ env.GO_VERSION }}-latest go version | cut -c 14-19)" >> $GITHUB_ENV
      - name: get go version
        if: github.event_name != 'pull_request'
        id: go_version_minor
        run: | 
          echo "minor_version=$(docker run --rm ghcr.io/${{ github.repository_owner }}/builder:ubi9-godev${{ env.GO_VERSION }}-latest go version | cut -c 14-17)" >> $GITHUB_ENV
      - name: reuse cache to push tagged Multi-arch images...
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v3.3.0
        with:
          builder: ${{ steps.docker_buildx.outputs.name }}
          context: .
          file: ./Dockerfile.ubi9
          platforms: linux/amd64,linux/ppc64le,linux/arm64,linux/s390x
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/builder:ubi9-godev-v${{ env.minor_version }},ghcr.io/${{ github.repository_owner }}/builder:ubi9-godev-v${{ env.patch_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          provenance: false
